var H=Object.defineProperty,Z=Object.defineProperties;var ee=Object.getOwnPropertyDescriptors;var B=Object.getOwnPropertySymbols;var te=Object.prototype.hasOwnProperty,re=Object.prototype.propertyIsEnumerable;var D=(t,e,r)=>e in t?H(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,d=(t,e)=>{for(var r in e||(e={}))te.call(e,r)&&D(t,r,e[r]);if(B)for(var r of B(e))re.call(e,r)&&D(t,r,e[r]);return t},v=(t,e)=>Z(t,ee(e));import{s as se,b$ as U,cN as ie,C as I,e as M,k,bl as E,h as le,a_ as $,j7 as N,d9 as O,fj as _,cB as z,n as Q,cD as G,jF as oe,jr as V,d1 as q,gA as ae,jG as F,jq as W,cR as R,hX as ne,hY as ue,cI as ce,cJ as pe,cK as he,iy as ye,ia as de,cL as fe,cQ as me,aP as J,aL as ge,ah as Ae,X as p,Y as h,aO as Se,bA as ve,ct as xe,Z as we}from"./vendor.1906794a.js";import{s as be}from"./ArcGISCachedService.33162956.js";import{n as Ie,T as Ue}from"./TilemapCache.aaa8635b.js";import{o as _e}from"./jsonContext.3580ba57.js";import{a as Re}from"./StyleRepository.6d1f20fa.js";import"./colorUtils.c7035b36.js";import"./GeometryUtils.d4e26b77.js";import"./definitions.21e97413.js";let j=null;function Te(t){if(j)return j;const e={lossy:"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA",lossless:"UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==",alpha:"UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==",animation:"UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA"};return j=new Promise(r=>{const s=new Image;s.onload=()=>{s.onload=s.onerror=null,r(s.width>0&&s.height>0)},s.onerror=()=>{s.onload=s.onerror=null,r(!1)},s.src="data:image/webp;base64,"+e[t]}),j}const Pe=se.getLogger("esri.layers.support.SpriteSource"),$e=1.15;class je{constructor(e,r,s,i){this.baseURL=e,this.devicePixelRatio=r,this.maxTextureSize=s,this._spriteImageFormat=i,this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded"}get spriteNames(){const e=[];for(const r in this._spritesData)e.push(r);return e.sort(),e}getSpriteInfo(e){return this._spritesData[e]}async load(e){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(e),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"}_loadSprites(e){this._isRetina=this.devicePixelRatio>$e;const r=U(this.baseURL),s=r.query?"?"+ie(r.query):"",i=this._isRetina?"@2x":"",o=`${r.path}${i}.${this._spriteImageFormat}${s}`,l=`${r.path}${i}.json${s}`;return Promise.all([I(l,e),I(o,d({responseType:"image"},e))]).then(([a,n])=>{const u=Object.keys(a.data);if(!u||u.length===0||u.length===1&&u[0]==="_ssl"||!n||!n.data)return this._spritesData=this.image=null,this.width=this.height=0,Promise.resolve(null);this._spritesData=a.data;const y=n.data,S=Math.max(this.maxTextureSize,4096);if(y.width>S||y.height>S){const A=`Sprite resource for style ${r.path} is bigger than the maximum allowed of ${S} pixels}`;throw Pe.error(A),new M("SpriteSource",A)}this.width=y.width,this.height=y.height;const f=document.createElement("canvas"),m=f.getContext("2d");f.width=y.width,f.height=y.height,m.drawImage(y,0,0,y.width,y.height);const T=m.getImageData(0,0,y.width,y.height),g=new Uint8Array(T.data);let P;for(let A=0;A<g.length;A+=4)P=g[A+3]/255,g[A]=g[A]*P,g[A+1]=g[A+1]*P,g[A+2]=g[A+2]*P;this.image=g})}}class Le{constructor(e){this.url=e}async fetchTileIndex(){return this._tileIndexPromise||(this._tileIndexPromise=I(this.url).then(e=>e.data.index)),this._tileIndexPromise}async dataKey(e,r){const s=await this.fetchTileIndex();return k(r),this._getIndexedDataKey(s,e)}_getIndexedDataKey(e,r){const s=[r];if(r.level<0||r.row<0||r.col<0||r.row>>r.level>0||r.col>>r.level>0)return null;let i=r;for(;i.level!==0;)i=new E(i.level-1,i.row>>1,i.col>>1,i.world),s.push(i);let o,l,a=e,n=s.pop();if(a===1)return n;for(;s.length;)if(o=s.pop(),l=(1&o.col)+((1&o.row)<<1),a){if(a[l]===0){n=null;break}if(a[l]===1){n=o;break}n=o,a=a[l]}return n}}class Oe{constructor(e,r){this._tilemap=e,this._tileIndexUrl=r}async fetchTileIndex(e){return this._tileIndexPromise||(this._tileIndexPromise=I(this._tileIndexUrl,{query:d({},e==null?void 0:e.query)}).then(r=>r.data.index)),this._tileIndexPromise}dataKey(e,r){const{level:s,row:i,col:o}=e,l=new E(e);return this._tilemap.fetchAvailabilityUpsample(s,i,o,l,r).then(()=>(l.world=e.world,l)).catch(a=>{if(le(a))throw a;return null})}}class Ce{constructor(e,r,s){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=e,this.sourceUrl=r;const i=U(this.sourceUrl),o=$(s),l=o.tiles;if(i)for(let f=0;f<l.length;f++){const m=U(l[f]);m&&(N(m.path)||(m.path=O(i.path,m.path)),l[f]=_(m.path,d(d({},i.query),m.query)))}this.tileServers=l;const a=s.capabilities&&s.capabilities.split(",").map(f=>f.toLowerCase().trim()),n=(s==null?void 0:s.exportTilesAllowed)===!0,u=(a==null?void 0:a.includes("tilemap"))===!0,y=n&&s.hasOwnProperty("maxExportTilesCount")?s.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:n,supportsTileMap:u},exportTiles:n?{maxExportTilesCount:+y}:null},this.tileInfo=Ie(o.tileInfo,o,null,{ignoreMinMaxLOD:!0});const S=s.tileMap?_(O(i.path,s.tileMap),i.query):null;u?(this.type="vector-tile",this.tilemap=new Oe(new Ue({layer:{parsedUrl:i,tileInfo:this.tileInfo,type:"vector-tile",tileServers:this.tileServers}}),S)):S&&(this.tilemap=new Le(S)),this.fullExtent=z.fromJSON(s.fullExtent)}async getRefKey(e,r){var s,i;return(s=(i=this.tilemap)==null?void 0:i.dataKey(e,r))!=null?s:e}getSourceTileUrl(e,r,s){return this.tileServers[r%this.tileServers.length].replace(/\{z\}/gi,e.toString()).replace(/\{y\}/gi,r.toString()).replace(/\{x\}/gi,s.toString())}isCompatibleWith(e){const r=this.tileInfo,s=e.tileInfo;if(!r.spatialReference.equals(s.spatialReference)||!r.origin.equals(s.origin)||Math.round(r.dpi)!==Math.round(s.dpi))return!1;const i=r.lods,o=s.lods,l=Math.min(i.length,o.length);for(let a=0;a<l;a++){const n=i[a],u=o[a];if(n.level!==u.level||Math.round(n.scale)!==Math.round(u.scale))return!1}return!0}}const C=Q.defaults&&Q.defaults.io.corsEnabledServers;async function Be(t,e){const r={source:null,sourceBase:null,sourceUrl:null,validatedSource:null,style:null,styleBase:null,styleUrl:null,sourceNameToSource:{},primarySourceName:"",spriteFormat:"png"},[s,i]=typeof t=="string"?[t,null]:[null,t.jsonUrl];await b(r,"esri",t,i,e);const o={layerDefinition:r.validatedSource,url:s,serviceUrl:r.sourceUrl,style:r.style,styleUrl:r.styleUrl,spriteUrl:r.style.sprite&&w(r.styleBase,r.style.sprite),spriteFormat:r.spriteFormat,glyphsUrl:r.style.glyphs&&w(r.styleBase,r.style.glyphs),sourceNameToSource:r.sourceNameToSource,primarySourceName:r.primarySourceName};return x(o.spriteUrl),x(o.glyphsUrl),o}function x(t){if(!t)return;const e=oe(t);C&&!C.includes(e)&&C.push(e)}function w(...t){let e;for(let r=0;r<t.length;++r)V(t[r])?e&&(e=e.split("://")[0]+":"+t[r].trim()):e=N(t[r])?t[r]:O(e,t[r]);return G(e)}async function b(t,e,r,s,i){let o,l,a;if(k(i),typeof r=="string"){const u=q(r);x(u),a=await I(u,v(d({},i),{responseType:"json",query:d({f:"json"},i==null?void 0:i.query)})),a.ssl&&(o&&(o=o.replace(/^http:/i,"https:")),l&&(l=l.replace(/^http:/i,"https:"))),o=u,l=u}else a={data:r},o=r.jsonUrl||null,l=s;const n=a.data;return K(n)?(t.styleUrl=o||null,Me(t,n,l,i)):De(n)?t.sourceUrl?X(t,n,l,!1,e,i):(t.sourceUrl=o||null,X(t,n,l,!0,e,i)):Promise.reject("You must specify the URL or the JSON for a service or for a style.")}function K(t){return!!t.sources}function De(t){return!K(t)}async function Me(t,e,r,s){const i=r?ae(r):F;t.styleBase=i,t.style=e,t.styleUrl&&x(t.styleUrl),e["sprite-format"]&&e["sprite-format"].toLowerCase()==="webp"&&(t.spriteFormat="webp");const o=[];if(e.sources&&e.sources.esri){const l=e.sources.esri;l.url?await b(t,"esri",w(i,l.url),void 0,s):o.push(b(t,"esri",l,i,s))}for(const l of Object.keys(e.sources))l!=="esri"&&e.sources[l].type==="vector"&&(e.sources[l].url?o.push(b(t,l,w(i,e.sources[l].url),void 0,s)):e.sources[l].tiles&&o.push(b(t,l,e.sources[l],i,s)));await Promise.all(o)}async function X(t,e,r,s,i,o){const l=r?G(r)+"/":F,a=ke(e,l),n=new Ce(i,_(l,o==null?void 0:o.query),a);if(!s&&t.primarySourceName in t.sourceNameToSource){const u=t.sourceNameToSource[t.primarySourceName];if(!u.isCompatibleWith(n))return Promise.resolve();n.fullExtent!=null&&(u.fullExtent!=null?u.fullExtent.union(n.fullExtent):u.fullExtent=n.fullExtent.clone()),u.tileInfo.lods.length<n.tileInfo.lods.length&&(u.tileInfo=n.tileInfo)}if(s?(t.sourceBase=l,t.source=e,t.validatedSource=a,t.primarySourceName=i,t.sourceUrl&&x(t.sourceUrl)):x(l),t.sourceNameToSource[i]=n,!t.style)return e.defaultStyles==null?Promise.reject():typeof e.defaultStyles=="string"?b(t,"",w(l,e.defaultStyles,"root.json"),void 0,o):b(t,"",e.defaultStyles,w(l,"root.json"),o)}function ke(t,e){if(t.hasOwnProperty("tileInfo"))return t;const r={xmin:-20037507067161843e-9,ymin:-20037507067161843e-9,xmax:20037507067161843e-9,ymax:20037507067161843e-9,spatialReference:{wkid:102100}},s=512;let i=78271.51696400007,o=2958287637957775e-7;const l=[],a=t.hasOwnProperty("minzoom")?+t.minzoom:0,n=t.hasOwnProperty("maxzoom")?+t.maxzoom:22;for(let u=0;u<=n;u++)u>=a&&l.push({level:u,scale:o,resolution:i}),i/=2,o/=2;for(const u of t.tiles)x(w(e,u));return{capabilities:"TilesOnly",initialExtent:r,fullExtent:r,minScale:0,maxScale:0,tiles:t.tiles,tileInfo:{rows:s,cols:s,dpi:96,format:"pbf",origin:{x:-20037508342787e-6,y:20037508342787e-6},lods:l,spatialReference:{wkid:102100}}}}class Y{constructor(e,r){this.lockedSchemaPixelSize=e,this.isGCS=r}getLevelRowColumn(e){return this.isGCS?[e[0],e[1]>>1,e[2]>>1]:this.lockedSchemaPixelSize===256&&e[0]>0?[e[0]-1,e[1]>>1,e[2]>>1]:e}adjustLevel(e){return this.isGCS?e:this.lockedSchemaPixelSize===256?e>0?e-1:0:e}getShift(e,r){let s=0,i=0;return(this.lockedSchemaPixelSize===256||this.isGCS)&&(e[2]%2&&(s=r),e[1]%2&&(i=r)),[s,i]}getScale(e){if(this.isGCS){if(this.lockedSchemaPixelSize===512)return 4}else if(this.lockedSchemaPixelSize===256&&e===0)return 1;return 2}static create256x256CompatibleTileInfo(e){if(!e)return null;if(e.size[0]===256&&e.size[1]===256)return e;const r=256,s=e.spatialReference.isGeographic,i=[],o=e.lods.length;for(let l=0;l<o;l++){const a=e.lods[l],n=s?a.resolution:2*a.resolution;i.push(new W({level:a.level,scale:a.scale,resolution:n}))}return new R({size:[r,r],dpi:e.dpi,format:e.format,compressionQuality:e.compressionQuality,origin:e.origin,spatialReference:e.spatialReference,lods:i})}static create512x512CompatibleTileInfo(e){if(!e||e.size[0]===256||e.size[1]===256)return null;const r=512,s=[],i=e.lods.length;for(let o=0;o<i;o++){const l=e.lods[o],a=.5*l.resolution;s.push(new W({level:l.level,scale:l.scale,resolution:a}))}return new R({size:[r,r],dpi:e.dpi,format:e.format,compressionQuality:e.compressionQuality,origin:e.origin,spatialReference:e.spatialReference,lods:s})}}const L=1e-6;function Ee(t,e){if(t===e)return!0;if(!t&&e!=null||t!=null&&!e||!t.spatialReference.equals(e.spatialReference)||t.dpi!==e.dpi)return!1;const r=t.origin,s=e.origin;if(Math.abs(r.x-s.x)>=L||Math.abs(r.y-s.y)>=L)return!1;let i,o;t.lods[0].scale>e.lods[0].scale?(i=t,o=e):(o=t,i=e);for(let l=i.lods[0].scale;l>=o.lods[o.lods.length-1].scale-L;l/=2)if(Math.abs(l-o.lods[0].scale)<L)return!0;return!1}function Ne(t,e){if(t===e)return t;if(!t&&e!=null)return e;if(t!=null&&!e)return t;const r=t.size[0],s=t.format,i=t.dpi,o={x:t.origin.x,y:t.origin.y},l=t.spatialReference.toJSON(),a=t.lods[0].scale>e.lods[0].scale?t.lods[0]:e.lods[0],n=t.lods[t.lods.length-1].scale<=e.lods[e.lods.length-1].scale?t.lods[t.lods.length-1]:e.lods[e.lods.length-1],u=a.scale,y=a.resolution,S=n.scale,f=[];let m=u,T=y,g=0;for(;m>S;)f.push({level:g,resolution:T,scale:m}),g++,m/=2,T/=2;return new R({size:[r,r],dpi:i,format:s||"pbf",origin:o,lods:f,spatialReference:l})}let c=class extends ne(ue(be(ce(pe(he(ye(de(fe(me))))))))){constructor(...t){super(...t),this._spriteSourceMap=new Map,this.currentStyleInfo=null,this.style=null,this.isReference=null,this.operationalLayerType="VectorTileLayer",this.type="vector-tile",this.url=null,this.symbolCollisionBoxesVisible=!1,this.path=null}normalizeCtorArgs(t,e){return typeof t=="string"?d({url:t},e):t}destroy(){this._spriteSourceMap.clear()}async prefetchResources(t){await this.loadSpriteSource(globalThis.devicePixelRatio||1,t)}load(t){const e=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1},t).catch(J).then(async()=>{if(!this.portalItem||!this.portalItem.id)return;const r=`${this.portalItem.itemUrl}/resources/styles/root.json`;(await I(r,v(d({},t),{query:v(d({f:"json"},this.customParameters),{token:this.apiKey})}))).data&&this.read({url:r},_e(this.portalItem))}).catch(J).then(()=>this._loadStyle(t));return this.addResolvingPromise(e),Promise.resolve(this)}get attributionDataUrl(){const t=this.currentStyleInfo,e=t&&t.serviceUrl&&U(t.serviceUrl);if(!e)return null;const r=this._getDefaultAttribution(e.path);return r?_(r,v(d({},this.customParameters),{token:this.apiKey})):null}get capabilities(){const t=this.primarySource;return t?t.capabilities:{operations:{supportsExportTiles:!1,supportsTileMap:!1},exportTiles:null}}get fullExtent(){var t;return((t=this.primarySource)==null?void 0:t.fullExtent)||null}get parsedUrl(){return this.serviceUrl?U(this.serviceUrl):null}get serviceUrl(){return this.currentStyleInfo&&this.currentStyleInfo.serviceUrl||null}get spatialReference(){return this.tileInfo&&this.tileInfo.spatialReference||null}get styleUrl(){return this.currentStyleInfo&&this.currentStyleInfo.styleUrl||null}writeStyleUrl(t,e){t&&V(t)&&(t=`https:${t}`),e.styleUrl=t}get tileInfo(){var t;const e=[];for(const s in this.sourceNameToSource)e.push(this.sourceNameToSource[s]);let r=((t=this.primarySource)==null?void 0:t.tileInfo)||new R;if(e.length>1)for(let s=0;s<e.length;s++)Ee(r,e[s].tileInfo)&&(r=Ne(r,e[s].tileInfo));return r}readVersion(t,e){return e.version?parseFloat(e.version):parseFloat(e.currentVersion)}get compatibleTileInfo256(){return Y.create256x256CompatibleTileInfo(this.tileInfo)}get compatibleTileInfo512(){return Y.create512x512CompatibleTileInfo(this.tileInfo)}async loadSpriteSource(t=1,e){if(!this._spriteSourceMap.has(t)){var r;const s=ge(),i=(r=this.currentStyleInfo)!=null&&r.spriteUrl?_(this.currentStyleInfo.spriteUrl,v(d({},this.customParameters),{token:this.apiKey})):null,o=new je(i,t,s.maxTextureSize,this.currentStyleInfo.spriteFormat);await o.load(e),this._spriteSourceMap.set(t,o)}return Promise.resolve(this._spriteSourceMap.get(t))}async loadStyle(t,e){var r;const s=t||this.style||this.url;return this._loadingTask&&typeof s=="string"&&this.url===s||((r=this._loadingTask)==null||r.abort(),this._loadingTask=Ae(i=>(this._spriteSourceMap.clear(),this._getSourceAndStyle(s,{signal:i})),e)),this._loadingTask.promise}getStyleLayerId(t){return this.styleRepository.getStyleLayerId(t)}getStyleLayerIndex(t){return this.styleRepository.getStyleLayerIndex(t)}getPaintProperties(t){return $(this.styleRepository.getPaintProperties(t))}setPaintProperties(t,e){const r=this.styleRepository.isPainterDataDriven(t);this.styleRepository.setPaintProperties(t,e);const s=this.styleRepository.isPainterDataDriven(t);this.emit("paint-change",{layer:t,paint:e,isDataDriven:r||s})}getStyleLayer(t){return $(this.styleRepository.getStyleLayer(t))}setStyleLayer(t,e){this.styleRepository.setStyleLayer(t,e),this.emit("style-layer-change",{layer:t,index:e})}deleteStyleLayer(t){this.styleRepository.deleteStyleLayer(t),this.emit("delete-style-layer",{layer:t})}getLayoutProperties(t){return $(this.styleRepository.getLayoutProperties(t))}setLayoutProperties(t,e){this.styleRepository.setLayoutProperties(t,e),this.emit("layout-change",{layer:t,layout:e})}setStyleLayerVisibility(t,e){this.styleRepository.setStyleLayerVisibility(t,e),this.emit("style-layer-visibility-change",{layer:t,visibility:e})}getStyleLayerVisibility(t){return this.styleRepository.getStyleLayerVisibility(t)}write(t,e){return e&&e.origin&&!this.styleUrl?(e.messages&&e.messages.push(new M("vectortilelayer:unsupported",`VectorTileLayer (${this.title}, ${this.id}) with style defined by JSON only are not supported`,{layer:this})),null):super.write(t,e)}getTileUrl(t,e,r){return null}async _getSourceAndStyle(t,e){if(!t)throw new Error("invalid style!");const r=await Be(t,v(d({},e),{query:v(d({},this.customParameters),{token:this.apiKey})}));r.spriteFormat==="webp"&&(await Te("lossy")||(r.spriteFormat="png")),this._set("currentStyleInfo",d({},r)),typeof t=="string"?(this.url=t,this.style=null):(this.url=null,this.style=t),this._set("sourceNameToSource",r.sourceNameToSource),this._set("primarySource",r.sourceNameToSource[r.primarySourceName]),this._set("styleRepository",new Re(r.style)),this.read(r.layerDefinition,{origin:"service"}),this.emit("load-style")}_getDefaultAttribution(t){const e=t.match(/^https?:\/\/(?:basemaps|basemapsbeta|basemapsdev)(?:-api)?\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i),r=["OpenStreetMap_v2","OpenStreetMap_Daylight_v2","OpenStreetMap_Export_v2","OpenStreetMap_FTS_v2","OpenStreetMap_GCS_v2","World_Basemap","World_Basemap_v2","World_Basemap_Export_v2","World_Basemap_GCS_v2","World_Basemap_WGS84","World_Contours_v2"];if(!e)return;const s=e[2]&&e[2].toLowerCase();if(!s)return;const i=e[1]||"";for(const o of r)if(o.toLowerCase().includes(s))return q(`//static.arcgis.com/attribution/Vector${i}/${o}`)}async _loadStyle(t){var e,r;return(e=(r=this._loadingTask)==null?void 0:r.promise)!=null?e:this.loadStyle(null,t)}};p([h({readOnly:!0})],c.prototype,"attributionDataUrl",null),p([h({type:["show","hide"]})],c.prototype,"listMode",void 0),p([h({readOnly:!0,json:{read:!1}})],c.prototype,"capabilities",null),p([h({readOnly:!0})],c.prototype,"currentStyleInfo",void 0),p([h({json:{read:!1},readOnly:!0,type:z})],c.prototype,"fullExtent",null),p([h()],c.prototype,"style",void 0),p([h({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],c.prototype,"isReference",void 0),p([h({type:["VectorTileLayer"]})],c.prototype,"operationalLayerType",void 0),p([h({readOnly:!0})],c.prototype,"parsedUrl",null),p([h({readOnly:!0})],c.prototype,"serviceUrl",null),p([h({type:Se,readOnly:!0})],c.prototype,"spatialReference",null),p([h({readOnly:!0})],c.prototype,"styleRepository",void 0),p([h({readOnly:!0})],c.prototype,"sourceNameToSource",void 0),p([h({readOnly:!0})],c.prototype,"primarySource",void 0),p([h({type:String,readOnly:!0,json:{write:{ignoreOrigin:!0},origins:{"web-document":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],c.prototype,"styleUrl",null),p([ve(["portal-item","web-document"],"styleUrl")],c.prototype,"writeStyleUrl",null),p([h({json:{read:!1,origins:{service:{read:!1}}},readOnly:!0,type:R})],c.prototype,"tileInfo",null),p([h({json:{read:!1},readOnly:!0,value:"vector-tile"})],c.prototype,"type",void 0),p([h({json:{origins:{"web-document":{read:{source:"styleUrl"}},"portal-item":{read:{source:"url"}}},write:!1,read:!1}})],c.prototype,"url",void 0),p([h({readOnly:!0})],c.prototype,"version",void 0),p([xe("version",["version","currentVersion"])],c.prototype,"readVersion",null),p([h({readOnly:!0})],c.prototype,"compatibleTileInfo256",null),p([h({readOnly:!0})],c.prototype,"compatibleTileInfo512",null),p([h({type:Boolean})],c.prototype,"symbolCollisionBoxesVisible",void 0),p([h({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0),c=p([we("esri.layers.VectorTileLayer")],c);const Xe=c;export{Xe as default};
